mode: 0755
path: "/usr/local/sbin/dynamic-system-reserved-calc.sh"
contents:
  inline: |
    #!/bin/bash
    set -e
    NODE_SIZES_ENV=${NODE_SIZES_ENV:-/etc/node-sizing.env}
    # segment function, given a number it will return the portion specified by the offset and size. 
    # E.g.: 
    #  for 18gb of ram, $1=18 -> return the first 4gb -> segment(0,4) = 4 
    #                         -> return the remaining up to 32gb -> segment(4,32) = 14 
    awk_segment_function=' 
        function segment (offset, size) 
        { 
            if ($1 - offset >= size) 
                m=size; 
            else if ($1 - offset <= 0) 
                m=0; 
            else 
                m=$1 - offset 
            return m; 
        }' 
    function dynamic_memory_sizing { 
        total_memory=$( free -m | awk '/^Mem:/{print $2/1024}' ) 
        echo $total_memory | awk "$awk_segment_function"' 
        { 
            first_4g = segment(0,4) 
            next_4g = segment(4,4) 
            next_8g = segment(8,8) 
            next_112g = segment(16,112) 
            remaining = segment(128,100000000) 
 
            printf "SYSTEM_RESERVED_MEMORY=%.0fGi\n", first_4g*0.25 + next_4g*0.2 + next_8g*0.1 + next_112g*0.06 + remaining*0.02 + 0.5  # round up 
        }' >> ${NODE_SIZES_ENV} 
    } 
    function dynamic_cpu_sizing { 
        total_cpu=$( getconf _NPROCESSORS_ONLN ) 
        echo $total_cpu | awk "$awk_segment_function"' 
        { 
            first_core = segment(0,1) 
            second_core = segment(1,1) 
            next_2_cores = segment(2,2) 
            remaining = segment(4,100000000) 
 
            printf "SYSTEM_RESERVED_CPU=%im\n", (first_core*0.06 + second_core*0.01 + next_2_cores*0.005 + remaining*0.0025)*1000 
        }' >> ${NODE_SIZES_ENV} 
    } 
    function dynamic_ephemeral_sizing {
        echo "Not implemented yet"
    }
    function dynamic_pid_sizing {
        echo "Not implemented yet"
    }
    function set_memory {
        SYSTEM_RESERVED_MEMORY=$1
        if [ -z "${SYSTEM_RESERVED_MEMORY}" ]; then
            SYSTEM_RESERVED_MEMORY="1Gi"
        fi
        echo "SYSTEM_RESERVED_MEMORY=${SYSTEM_RESERVED_MEMORY}" >> ${NODE_SIZES_ENV}
    }
    function set_cpu {
        SYSTEM_RESERVED_CPU=$1
        if [ -z "${SYSTEM_RESERVED_CPU}" ]; then
            SYSTEM_RESERVED_CPU="500m"
        fi
        echo "SYSTEM_RESERVED_CPU=${SYSTEM_RESERVED_CPU}" >> ${NODE_SIZES_ENV}
    }
    function set_es {
        SYSTEM_RESERVED_ES=$1
        if [ -z "${SYSTEM_RESERVED_ES}" ]; then
            SYSTEM_RESERVED_ES="1Gi"
        fi
        echo "SYSTEM_RESERVED_ES=${SYSTEM_RESERVED_ES}" >> ${NODE_SIZES_ENV}
    }
    function dynamic_node_sizing {
        rm -f ${NODE_SIZES_ENV}
        dynamic_memory_sizing
        dynamic_cpu_sizing
        set_es $1
        #dynamic_ephemeral_sizing
        #dynamic_pid_sizing
    }
    function static_node_sizing {
        rm -f ${NODE_SIZES_ENV}
        set_memory $1
        set_cpu $2
        set_es $3
    }

    if [ $1 == "true" ]; then
        dynamic_node_sizing $4
    elif [ $1 == "false" ]; then
        static_node_sizing $2 $3 $4
    else
        echo "Unrecognized command line option. Valid options are \"true\" or \"false\""
    fi

